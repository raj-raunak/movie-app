{"ast":null,"code":"var _jsxFileName = \"/Users/raunak.raj/Desktop/FE/imdb/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header';\nimport SearchItem from './SearchItem';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport apiRequest from './apiRequest';\nimport Footer from './Footer';\nimport Content from './Content';\nimport LineItem from './LineItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const API_URL = `https://api.themoviedb.org/3/discover/movie?\n  api_key=55903b004b65252bf433fb4218601d2c&language=en-US&\n  sort_by=popularity.desc&page=1`;\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [fetchError, setFetchError] = useState(null);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const response = await fetch(API_URL);\n\n        if (!response.ok) {\n          throw new Error(`This is an HTTP error: The status is ${response.status}`);\n        }\n\n        const listItems = await response.json();\n        setItems(listItems);\n        setFetchError(null);\n      } catch (err) {\n        setFetchError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchItems();\n  }, []);\n\n  const handleCheck = async id => {\n    // const listItems = items.map((item) => item.id === id ? { ...item, checked: !item.checked } : item);\n    const listItems = items;\n    setItems(listItems); // const myItem = listItems.filter((item) => item.id === id);\n\n    const myItem = listItems; // const updateOptions = {\n    //   method: 'PATCH',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    // body: JSON.stringify({ checked: myItem[0].checked })\n\n    body: JSON.stringify(myItem[0]); // };\n    // const reqUrl = `${API_URL}/${id}`;\n    // const result = await apiRequest(reqUrl, updateOptions);\n    // if (result) setFetchError(result);\n\n  }; //   return(\n  //   <div className='App'>\n  //     {\n  //       data.map((item) =>(\n  //         <ol key ={item.id}>\n  //           <li>Vote-Avg: {item.vote_average}</li>\n  //         </ol>\n  //       ))\n  //     }\n  //   </div>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Movies List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SearchItem, {\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Items...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: `Error: ${fetchError}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 22\n      }, this), !fetchError && !isLoading && /*#__PURE__*/_jsxDEV(Content, {\n        items: items.filter(item => item.item.toLowerCase().includes(search.toLowerCase())),\n        handleCheck: handleCheck // handleDelete={handleDelete}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      length: items.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"RK8AYN8h6N2xHEtdtdrdSfrw5Io=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","SearchItem","useState","useEffect","React","apiRequest","Footer","Content","LineItem","App","API_URL","items","setItems","isLoading","setIsLoading","fetchError","setFetchError","search","setSearch","fetchItems","response","fetch","ok","Error","status","listItems","json","err","message","handleCheck","id","myItem","body","JSON","stringify","color","filter","item","toLowerCase","includes","length"],"sources":["/Users/raunak.raj/Desktop/FE/imdb/src/App.js"],"sourcesContent":["import Header from './Header';\nimport SearchItem from './SearchItem';\nimport './App.css';\nimport {useState, useEffect} from 'react'\nimport React from 'react'\nimport apiRequest from './apiRequest';\nimport Footer from './Footer';\nimport Content from './Content';\nimport LineItem from './LineItem'\n\nfunction App() {\n  const API_URL = `https://api.themoviedb.org/3/discover/movie?\n  api_key=55903b004b65252bf433fb4218601d2c&language=en-US&\n  sort_by=popularity.desc&page=1`;\n\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading]= useState(true);\n  const[fetchError, setFetchError]= useState(null);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const response = await fetch(API_URL);\n        if (!response.ok) {\n          throw new Error(\n            `This is an HTTP error: The status is ${response.status}`\n          );\n        }\n        const listItems = await response.json();\n        setItems(listItems);\n        setFetchError(null);\n      } catch(err) {\n        setFetchError(err.message);\n      } finally {\n        setIsLoading(false);\n        \n      }  \n    }\n    fetchItems()\n  }, [])  \n\n  const handleCheck = async (id) => {\n    // const listItems = items.map((item) => item.id === id ? { ...item, checked: !item.checked } : item);\n    const listItems=items;\n    setItems(listItems);\n\n    // const myItem = listItems.filter((item) => item.id === id);\n    const myItem = listItems;\n    // const updateOptions = {\n    //   method: 'PATCH',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n      // body: JSON.stringify({ checked: myItem[0].checked })\n      body: JSON.stringify( myItem[0])\n    // };\n    // const reqUrl = `${API_URL}/${id}`;\n    // const result = await apiRequest(reqUrl, updateOptions);\n    // if (result) setFetchError(result);\n  }\n\n\n\n//   return(\n//   <div className='App'>\n//     {\n//       data.map((item) =>(\n//         <ol key ={item.id}>\n//           <li>Vote-Avg: {item.vote_average}</li>\n//         </ol>\n//       ))\n//     }\n//   </div>\n//   );\n// }\nreturn (\n  <div className=\"App\">\n    <Header title=\"Movies List\" />\n    {/* <AddItem\n      newItem={newItem}\n      setNewItem={setNewItem}\n      handleSubmit={handleSubmit}\n    /> */}\n    <SearchItem\n      search={search}\n      setSearch={setSearch}\n    />\n    <main>\n      {isLoading && <p>Loading Items...</p>}\n      {fetchError && <p style={{ color: \"red\" }}>{`Error: ${fetchError}`}</p>}\n      {!fetchError && !isLoading && <Content\n        items={items.filter(item => ((item.item).toLowerCase()).includes(search.toLowerCase()))}\n        handleCheck={handleCheck}\n        // handleDelete={handleDelete}\n      />}\n    </main>\n    <Footer length={items.length} />\n  </div>\n);\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}